#!/usr/bin/perl
#
# Copyright 2014 Pierre Mavro <deimos@deimos.fr>
# Copyright 2014 Vivien Didelot <vivien@didelot.org>
# Copyright 2016-2019 Han Boetes <hboetes@gmail.com>

# Licensed under the terms of the GNU GPL v3, or any later version.
#
# This script is meant to use with i3blocks. It parses the output of the "acpi"
# command — often provided by a package of the same name — read the status of
# the battery, and eventually its remaining time, to full charge or discharge.
#
# Since it is recommended to keep the battery charge between 80% and
# 20%, and my BIOS already takes care I don't overcharge this script
# starts notifying at 20% with the color green, gradually turning to
# red at 10%, if the batter charge gets below 10% it will attempt to
# suspend the laptop.

# If you want you can let this script suspend your laptop: Install
# sudo, pm-utils and use visudo to add a line like this:
#
# %sudo ALL=(ALL:ALL) NOPASSWD:/usr/sbin/pm-suspend.

# SETTINGS
#
# Below this battery percentage I'd like to get notified.
my $range = 20;
# Below this I start nagging with a red battery indicator.
my $nag = 15;
# Below this I want my system to go to sleep.
my $sleep = 10;

# CODE
use strict;
use warnings;
use utf8;

my $acpi;
my $status;
my $percent;
my $full_text;
my $short_text;
my $bat_number = $ENV{BLOCK_INSTANCE} || 0;
my $rgb;

open (ACPI, "acpi -b|") or die;
$acpi = <ACPI>;
close(ACPI);

# fail on unexpected output
if ($acpi !~ /: (\w+), (\d+)%/) {
    die "$acpi\n";
}

$status = $1;
$percent = $2;
$full_text = "$percent%";

if ($status eq 'Discharging') {
    $full_text .= ' DIS';
} elsif ($status eq 'Charging') {
    $full_text .= ' CHR';
}

$short_text = $full_text;

if ($acpi =~ /(\d\d:\d\d):/) {
    $full_text .= " ($1)";
}

# print text
print "$full_text\n";
print "$short_text\n";

sub redAndGreen {
    my ($range, $percent, $sleep) = @_;
    my $green = (($percent - $sleep) / ($range - $sleep)) * 255;
    if ($green < 0) {
        $green = 0;
    }
    my $red = 255 - $green;
    $green = sprintf('%02x', $green);
    $red = sprintf('%02x', $red);
    return "#${red}${green}00";
}


if ($status eq 'Discharging') {
    if ($percent <= $range) {
        $rgb = redAndGreen($range, $percent, $sleep);
        system("notify-send -t 500 -h 'string:bgcolor:$rgb' -h 'string:fgcolor:#000000' 'battery at '$percent'%'");
    }

    my $exit = 0;
    if ($percent < $nag) {
        $exit = 33
    };

    if ($percent < $sleep) {
        system("/usr/bin/sudo /usr/sbin/pm-suspend");
    }

    exit($exit);
}

exit(0);
