#!/bin/sh
# $Id: movemaildaily,v 1.34 2009/08/17 09:10:22 han Exp $
#
# This script moves all mail older then a month to a backupfolder
# Let it run from a crontab, something like:
#
# 0 0 * * * ~/.mutt/movemaildaily

# Copyright (c) 2005 Han Boetes <hboetes@gmail.com>
#
# Permission to use, copy, modify, and distribute this software
# for any purpose with or without fee is hereby granted, provided
# that the above copyright notice and this permission notice
# appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
# WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
# AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR
# CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
# NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
# CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

# Settings:
# This is a generally respected environment variable that you
# should set in your shell to something like ``export TMP=${HOME}/.tmp''
TMP=${TMP:=/tmp}

# You mail basedirectory. Don't use "~/"; use "$HOME"
MailBase="$HOME/Mail"

BackupDirs="Maildir posted"

# The archive dir; I call it zarchive so it ends up as the last
# dir in the list.
ARCHIVE=zarchive

# list that receive a lot of messages
HiVolumeLists= # "openbsd-*" # zspam"
# number of days before messages should be deleted
HiVolumeTime=7


# list that receive only a few messages
LowVolumeLists="cc"
#
LowVolumeTime=14


# These files wil be rotated by only keeping the last 250 lines.
LogFiles="$HOME/.Maildroplog"

# Of course nobody should be able to read my mail.
umask 0077

#
# No more settings after this. But it may be interesting to read.
#

MONTH=$(date '+%m')
# Remove leading zero in monthname for ksh, otherwise it thinks
# it's an octal number.
MONTH=${MONTH#0}
 YEAR=$(date '+%Y')
  DAY=$(date '+%d')

cd $MailBase


# This function returns The date in YYYY-MM for any month number
# of month in the past. ie Suppose it is februari 2001. Then
# $(f_mailmonth 2) would return 2000-12
f_mailmonth ()
{
    if [ $# -eq 0 ]; then
        echo $(date +%Y-%m)
    else
        MONTH=$(($MONTH - $1 - 1))
        if [ $MONTH -lt 0 ]; then
	    MONTH=$(($MONTH + 12))
	    YEAR=$(($YEAR - 1))
        fi
        MONTH=$(($MONTH + 1))
        printf '%d-%02d\n' $YEAR $MONTH
    fi
}

LASTMONTH=$(f_mailmonth 1)
 TWOMONTH=$(f_mailmonth 2)

for i in $BackupDirs; do
    # If the backup folder does not exist make one
    [ -d $ARCHIVE/$LASTMONTH/$i ] || install -d $ARCHIVE/$LASTMONTH/$i/{cur,tmp,new}
    chmod -R 700 $ARCHIVE/$LASTMONTH/$i
    # Move all mail older than one month to the backup folder.
    find $i/cur -type f -mtime '+30' -exec mv {} $ARCHIVE/$LASTMONTH/$i/cur/ \;
done


#if the date is the first of the month we can zip the mailfolder from 2 month ago.
if [ $DAY -eq 1 ]; then
    cd $ARCHIVE
    if [ ! -e $TWOMONTH.tgz ]; then
        tar czf $TWOMONTH.tgz $TWOMONTH
        rm -rf $TWOMONTH
    else
        echo "$TWOMONTH.tgz already exists, your are rerunning the script on the first for testing :)"
    fi
    cd -> /dev/null
fi

# This find command searches through the mailinglist folders for mails
# that are older than 2 weeks and deletes them.  It's for when I go on
# a vacation.

# *WARNING* Use something like this line for testing.
# find $HOME/Mail/openbsd-* -type f -mtime '+3' -exec ls -la {} >> removetest \;

# Clean up the old message in the HiVolumeLists.
# find $HiVolumeLists  -type f -mtime +$HiVolumeTime  | xargs rm -f

# The low volume lists
find $LowVolumeLists -type f -mtime +$LowVolumeTime | xargs rm -f


# Rotate the logfiles:

# plain sh

tempfile=$(mktemp -q $TMP/${0##*/}.XXXXXXXX)
if [ $? -ne 0 ]; then
    echo "${0##*/}: Can't create temp file, exiting..." >&2
    exit 1
fi

for i in $LogFiles; do
    tail -n 600 $i > $tempfile
    cat $tempfile > $i
done
rm $tempfile

exit 0
